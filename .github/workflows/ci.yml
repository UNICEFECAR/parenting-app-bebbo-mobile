# This is a basic workflow to help you get started with Actions

name: Continuous Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  
  pull_request:
    branches:
      - main
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@master
#     - uses: c-hive/gha-yarn-cache@v1


    - name: Install node modules
      run: |
        npm install -g yarn
        
    - name: Install node modules
      run: |
        yarn install 
        
    - name: upgrade yarn
      run:  yarn info && yarn upgrade
      
    - name: Run test-a
      run:  yarn add yarn
#      && yarn test
          
    - name: Cache Gradle Wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-
          
    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew

    - name: Build Android App Bundle
      run: |
        cd android && ./gradlew bundleRelease --no-daemon
          
          
          
#    - name: Sign App Bundle
 #     id: sign_app
  #    uses: r0adkll/sign-android-release@v1
   #   with:
    #    releaseDirectory: android/app/build/outputs/bundle/release
     #   signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
      #  alias: ${{ secrets.MYAPP_UPLOAD_KEY_ALIAS }}
       # keyStorePassword: ${{ secrets.MYAPP_UPLOAD_STORE_PASSWORD }}
        #keyPassword: ${{ secrets.MYAPP_UPLOAD_KEY_PASSWORD }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
#        name: Signed App Bundle
 #       path: ${{steps.sign_app.outputs.signedReleaseFile}}
        name: android-apk
        path: '**/*.apk'


  #  - name: Deploy to Play Store (BETA)
   #   uses: r0adkll/upload-google-play@v1
    #  with:
     #   serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT }}
      #  packageName: com.testedapp
#        releaseFile: a${{steps.sign_app.outputs.signedReleaseFile}}
 #       track: beta
  #      inAppUpdatePriority: 3
   #     userFraction: 0.5
    #    whatsNewDirectory: android/release-notes/
        # mappingFile: android/app/build/outputs/mapping/release/mapping.txt
      # Runs a single command using the runners shell
#      - name: Run a one-line script
 #       run: echo Hello, world!

      # Runs a set of commands using the runners shell
  #    - name: Run a multi-line script
  #      run: |
   #       echo Add other actions to build,
    #      echo test, and deploy your project.
